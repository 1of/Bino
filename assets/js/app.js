(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
'use strict';

var _scrollPageUp = require('./modules/scrollPageUp');

var _scrollPageUp2 = _interopRequireDefault(_scrollPageUp);

var _animation = require('./modules/animation');

var _animation2 = _interopRequireDefault(_animation);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// You can write a call and import your functions in this file.
//
// This file will be compiled into app.js and will not be minified.
// Feel free with using ES6 here.

(function ($) {
	'use strict';

	// When DOM is ready

	$(function () {
		// When the user scrolls down
		window.onscroll = function () {
			(0, _scrollPageUp2.default)();
		};

		// When the user clicks on the button, scroll to the top of the document	 
		$("#topBtn").on('click', function () {
			var top = $('li a').offset().top;
			$('body,html').animate({ scrollTop: top }, 1500);
		});

		// When the user clicks on menu item	 
		$('li a').on('click', function (event) {
			$('li a').removeClass('menu-active');
			$(this).addClass('menu-active');
		});

		$('.mobile-menu').on('click', function (event) {
			event.preventDefault();

			if ($('#nav-panel').hasClass('display-toggle')) {
				$('#nav-panel').removeClass('display-toggle');
			} else {
				$('#nav-panel').addClass('display-toggle');
			}
		});
	});
})(jQuery);

},{"./modules/animation":2,"./modules/scrollPageUp":3}],2:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
	value: true
});
// init controller
var controller = new ScrollMagic.Controller();
var controller2 = new ScrollMagic.Controller();

// build scene
var funcAnim = function () {
	var listToAnim = [];
	listToAnim.push(document.getElementsByClassName("item_cofee")[0]);
	listToAnim.push(document.getElementsByClassName("item_watch")[0]);
	listToAnim.push(document.getElementsByClassName("item_car")[0]);
	listToAnim.push(document.getElementsByClassName("item_road")[0]);
	var scene = new ScrollMagic.Scene({ triggerElement: "#trigger1", duration: 960 }).on("enter", function () {
		// trigger animation by changing inline style.
		listToAnim.forEach(function (i) {
			i.classList.remove("blur");
			i.style.filter = "blur(0px)";
		});
	}).on("leave", function () {
		// reset style
		listToAnim.forEach(function (i) {
			i.classList.add("blur");
			i.style.filter = "blur(1px)";
		});
	}).addTo(controller);

	// build scene2
	var animateBtn = document.getElementsByClassName("anim-btn")[0];
	var animateBGcolor = document.getElementsByClassName("bg-black2")[0];
	var animatePromoTxt = document.getElementsByClassName("promo-text")[0];
	var animatePromoDesc = document.getElementsByClassName("promo-description")[0];

	var scene2 = new ScrollMagic.Scene({ triggerElement: "#trigger2", duration: 400 }).on("enter", function () {
		// trigger animation by changing inline style.
		animateBtn.classList.remove("unvisible");
		animatePromoTxt.classList.remove("unvisible");
		animatePromoDesc.classList.remove("unvisible");
		animateBtn.classList.add("animated", "bounceInUp", "delay-4s", "slower");
		animatePromoTxt.classList.add("animated", "zoomIn", "slow");
		animatePromoDesc.classList.add("animated", "fadeInDown", "slower");
	}).on("leave", function () {}).addTo(controller2);
}();

exports.default = funcAnim;

},{}],3:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

// When the user scrolls down 20px from the top of the document, show the button

var scrollFunc = function scrollFunction() {
    if (document.body.scrollTop > 550 || document.documentElement.scrollTop > 550) {
        document.getElementById("topBtn").style.display = "block";
    } else {
        document.getElementById("topBtn").style.display = "none";
    }
};

exports.default = scrollFunc;

},{}]},{},[1])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
